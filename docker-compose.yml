services:
  n8n-custom-api:
    image: ghcr.io/1atharvad/n8n-custom-api:latest
    restart: unless-stopped
    expose:
      - "8080"
    environment:
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}
      - N8N_BASIC_AUTH_ACTIVE=${N8N_BASIC_AUTH_ACTIVE}
      - N8N_BASIC_AUTH_USER=${N8N_BASIC_AUTH_USER}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_BASIC_AUTH_PASSWORD}
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      - N8N_RUNNERS_ENABLED=${N8N_RUNNERS_ENABLED}
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=${N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS}
      - N8N_TRUST_PROXY=${N8N_TRUST_PROXY}
      - N8N_HOST=${N8N_HOST}
      - N8N_PORT=${N8N_PORT}
      - N8N_PROTOCOL=${N8N_PROTOCOL}
      - N8N_LISTEN_ADDRESS=${N8N_LISTEN_ADDRESS}
      - N8N_SECURE_COOKIE=${N8N_SECURE_COOKIE}
      - N8N_DEFAULT_BINARY_DATA_MODE=filesystem
      - N8N_BINARY_DATA_STORAGE_PATH=/home/node/.n8n/binaryData
      - DB_TYPE=${DB_TYPE}
      - WEBHOOK_URL=${WEBHOOK_TUNNEL_URL}
      - EXECUTIONS_TIMEOUT=0
      - EXECUTIONS_DATA_SAVE_ON_ERROR=all
      - EXECUTIONS_DATA_SAVE_ON_SUCCESS=all
      - NODE_ENV=production npm run build
    volumes:
      - ./n8n-data:/home/node/.n8n
      - ./n8n_files:/n8n_files
      - ./tts_cache:/tts_cache
  cloudflared:
    image: cloudflare/cloudflared:latest
    restart: always
    command: tunnel --config /etc/cloudflared/config.yml run
    volumes:
      - ./cloudflared:/etc/cloudflared
    depends_on:
      - n8n-custom-api
  processes:
    build: ./processes
    restart: always
    depends_on:
      - n8n-custom-api
    environment:
      - CHECK_INTERVAL=10
      - TARGET_CONTAINER=n8n-deploy-n8n-custom-api-1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock