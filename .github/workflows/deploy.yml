name: Auto Deploy to Contabo

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  DEPLOY_PATH: /www/wwwroot/n8n.atharvadevasthali.com
  SECRETS_JSON: ${{ toJSON(secrets) }}
  VARS_JSON: ${{ toJSON(vars) }}

jobs:
  deploy:
    environment: production
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate .env file
        run: |
          rm -f .env

          echo "$SECRETS_JSON" | jq -r '
            to_entries
            | map(select(.key != "github_token" and .key != "CONTABO_SSH_KEY" and .key != "CONTABO_IP" and (.value | type == "string")))
            | map("\(.key)=\(.value)")
            | .[]
          ' > .env

          echo "$VARS_JSON" | jq -r '
            to_entries
            | map(select(.value | type == "string"))
            | map("\(.key)=\(.value)")
            | .[]
          ' >> .env

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.CONTABO_SSH_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -H ${{ secrets.CONTABO_IP }} >> ~/.ssh/known_hosts

      - name: Transfer .env file to Contabo
        run: |
          scp -i ~/.ssh/id_ed25519 .env root@${{ secrets.CONTABO_IP }}:${{ env.DEPLOY_PATH }}/.env

      - name: Deploy app on Contabo
        run: |
          ssh -i ~/.ssh/id_ed25519 root@${{ secrets.CONTABO_IP }} "
            set -e

            echo '--- Checking Node.js ---'
            if ! command -v node >/dev/null 2>&1; then
              echo 'Node.js not found, installing...'
              apt update -y
              apt install -y nodejs npm
            else
              echo 'Node.js already installed.'
            fi

            echo '--- Checking Docker ---'
            if ! command -v docker >/dev/null 2>&1; then
              echo 'Docker not found, installing...'
              apt update -y
              apt install -y docker-ce docker-ce-cli containerd.io
              systemctl enable docker
              systemctl start docker
            else
              echo 'Docker already installed.'
            fi

            echo '--- Pulling latest code ---'
            cd $DEPLOY_PATH &&
            git fetch origin main &&
            git reset --hard origin/main

            echo '--- Installing dependencies ---'
            npm install --silent

            echo '--- Running production build ---'
            # npm run docker:prod --silent

            echo 'âœ… Deployment complete!'
          "
